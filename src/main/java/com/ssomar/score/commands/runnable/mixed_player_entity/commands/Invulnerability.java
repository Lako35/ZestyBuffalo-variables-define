package com.ssomar.score.commands.runnable.mixed_player_entity.commands;

import com.ssomar.score.commands.runnable.ArgumentChecker;
import com.ssomar.score.commands.runnable.SCommandToExec;
import com.ssomar.score.commands.runnable.mixed_player_entity.MixedCommand;
import com.ssomar.score.utils.numbers.NTools;
import org.bukkit.ChatColor;
import org.bukkit.entity.Entity;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Player;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

/* INVULNERABILITY {ticks} */
public class Invulnerability extends MixedCommand {

    @Override
    public void run(Player p, Entity receiver, SCommandToExec sCommandToExec) {
        List<String> args = sCommandToExec.getOtherArgs();

        if(!(receiver instanceof LivingEntity)) return;
        LivingEntity livingReceiver = (LivingEntity) receiver;

        int ticks = NTools.getInteger(args.get(0)).get();
        int currentticks = livingReceiver.getNoDamageTicks();

        if((ticks+currentticks) >= 0) ticks += currentticks;
        else ticks = 0;

        //examples to check the code
        //playerticks 20 | ticksadded 30 => 50 > 0 YES
        //playerticks 20 | ticksadded -10 => 10 > 0 YES
        //playerticks 20 | ticksadded -30 => -10 > 0 NO -> 0

        if(receiver.isDead()) return;
        livingReceiver.setNoDamageTicks(ticks);
    }

    @Override
    public Optional<String> verify(List<String> args, boolean isFinalVerification) {
        if (args.isEmpty()) return Optional.of(notEnoughArgs + getTemplate());

        ArgumentChecker ac = checkDouble(args.get(0), isFinalVerification, getTemplate());
        if (!ac.isValid()) return Optional.of(ac.getError());

        return Optional.empty();
    }

    @Override
    public List<String> getNames() {
        List<String> names = new ArrayList<>();
        names.add("INVULNERABILITY");
        return names;
    }

    @Override
    public String getTemplate() {
        return "INVULNERABILITY {ticks}";
    }

    @Override
    public ChatColor getColor() {
        return null;
    }

    @Override
    public ChatColor getExtraColor() {
        return null;
    }
}
