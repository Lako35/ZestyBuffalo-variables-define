package com.ssomar.score.features.lang;

import com.ssomar.score.SCore;
import com.ssomar.score.features.FeatureSettingsInterface;
import com.ssomar.score.features.SavingVerbosityLevel;
import com.ssomar.score.menu.GUI;
import com.ssomar.score.utils.FixedMaterial;
import org.bukkit.Material;

import java.util.Arrays;
import java.util.Collections;

public enum FeatureSettingsSCoreID implements FeatureSettingsInterface {
    DisplayFeatures("DisplayFeatures", "Tampilkan Fitur", new String[]{""}, Material.ITEM_FRAME),
    EXECUTABLEBLOCK("EXECUTABLEBLOCK", "Blok yang Dapat Dieksekusi", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    EXECUTABLEBLOCKPLACED("EXECUTABLEBLOCKPLACED", "Blok yang Dapat Dieksekusi Telah Ditempatkan", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    EXECUTABLEEVENT("EXECUTABLEEVENT", "Event yang Dapat Dieksekusi", new String[]{}, Material.EMERALD),
    EXECUTABLEITEM("EXECUTABLEITEM", "Item yang Dapat Dieksekusi", new String[]{}, Material.EMERALD),
    EXECUTABLELEVER("EXECUTABLELEVER", "Tuas yang Dapat Dieksekusi", new String[]{}, Material.LEVER),
    FURNITURE("FURNITURE", "Perabotan", new String[]{}, Material.CHEST),
    FURNITUREPLACED("FURNITUREPLACED", "Perabotan Telah Ditempatkan", new String[]{}, Material.CHEST),
    HARDNESS("HARDNESS", "Kekerasan", new String[]{}, Material.BEDROCK),
    InteractionZoneFeatures("InteractionZoneFeatures", "Fitur Zona Interaksi", new String[]{"&7&oTekan F3 + b untuk melihat zona"}, Material.ITEM_FRAME),
    SCREEN("SCREEN", "Layar", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    SCREENUNIT("SCREENUNIT", "Unit Layar", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    SPROJECTILE("SPROJECTILE", "Proyektil", new String[]{}, Material.ARROW),
    TRADE("TRADE", "Perdagangan", new String[]{""}, Material.GOLD_INGOT),
    VARIABLE("VARIABLE", "Variabel", new String[]{}, GUI.WRITABLE_BOOK),
    aboveValue("aboveValue", "Nilai Diatas", new String[]{"&7&oNilai diatas"}, GUI.CLOCK),
    activator("activator", "Pengaktif", new String[]{"&7&oSebuah pengaktif"}, Material.BEACON),
    activators("activators", "Pengaktif", new String[]{"&7&oPengaktif / pemicu"}, Material.BEACON),
    activeTitle("activeTitle", "Judul Aktif", new String[]{"&7&oAktifkan judul"}, null),
    aligned("aligned", "Sejajar", new String[]{"&7&oApakah tampilan akan", "&7&osejajar atau tidak dengan", "&7&oblok lainnya"}, Material.LEVER),
    allowedEntities("allowedEntities", "Entitas yang Diizinkan", new String[]{"&7&oEntitas yang diizinkan"}, FixedMaterial.getMaterial(Arrays.asList("ZOMBIE_HEAD", "MONSTER_EGG"))),
    amount("amount", "Jumlah", new String[]{"&7&oJumlah"}, GUI.CLOCK),
    amountItemsTransferred("amountItemsTransferred", "Jumlah Item yang Ditransfer", new String[]{"&7&oDaftar putih material", "&7&oTaruh material", "&7&oyang bisa dimasukkan ke dalam wadah"}, Material.HOPPER),
    amplifier("amplifier", "Penguat", new String[]{"&7&oPenguat efek ramuan"}, GUI.CLOCK),
    animation("animation", "Animasi", new String[]{"&7&oAnimasi"}, Material.ANVIL),
    armorColor("armorColor", "Warna Armor", new String[]{"&7&oWarna dari armor"}, Material.LEATHER_CHESTPLATE),
    armorTrim("armorTrim", "Trim Armor", new String[]{"&7&oFitur trim armor"}, FixedMaterial.getMaterial(Arrays.asList("COAST_ARMOR_TRIM_SMITHING_TEMPLATE"))),
    aroundBlock("AroundBlock", "Blok Sekitar", new String[]{""}, Material.STONE),
    aroundBlockCdts("blockAroundCdts", "Kondisi blok sekitar", new String[]{"&7&oKondisi blok sekitar"}, Material.STONE),
    attribute("attribute", "Atribut", new String[]{"&7&oEdit atribut"}, Material.PAPER),
    attributes("attributes", "Atribut", new String[]{"&7&oAtribut"}, Material.PAPER),
    author("author", "Penulis", new String[]{"&7&oPenulis"}, Material.NAME_TAG),
    autoUpdateFeatures("autoUpdateFeatures", "Fitur Pembaruan Otomatis", new String[]{"&7&oPembaruan otomatis EI anda"}, GUI.GRINDSTONE),
    autoUpdateItem("autoUpdateItem", "Pembaruan Item Otomatis", new String[]{"&7&oSecara otomatis memperbarui item"}, null),
    bannerSettings("bannerSettings", "Pengaturan Spanduk", new String[]{"&7&oPengaturan spanduk"}, FixedMaterial.getMaterial(Arrays.asList("CREEPER_BANNER_PATTERN", "BANNER"))),
    blacklistMaterials("blacklistMaterials", "Daftar Hitam Material", new String[]{"&7&oDaftar hitam material", "&7&oTaruh material", "&7&oyang tidak bisa dimasukkan ke dalam wadah"}, Material.CHEST),
    blockCommands("blockCommands", "Perintah Blok", new String[]{"&7&oPerintah blok untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    blockCommands_target_block("blockCommands", "Perintah Blok Target", new String[]{"&7&oPerintah blok target untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    blockConditions("blockConditions", "Kondisi Blok", new String[]{""}, Material.ANVIL),
    blockFaceOnPlace("blockFaceOnPlace", "Sisi Blok saat Ditempatkan", new String[]{"&7&oSisi blok ketika blok ditempatkan"}, Material.COMPASS),
    blockLight("blockLight", "Pencahayaan Blok", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("LIGHT"))),
    blockState("blockState", "Status Blok", new String[]{"&7&oStatus blok"}, Material.BRICK),
    blockStatePlus("blockStatePlus", "Status Blok Plus", new String[]{"&7&oStatus blok plus"}, Material.BRICK),
    blockType("blockType", "Jenis Blok", new String[]{"&7&oJenis dari blok"}, Material.STONE),
    blockTypeMustBe("blockTypeMustBe", "Jenis Blok Harus", new String[]{"&7&oJenis blok harus"}, GUI.WRITABLE_BOOK),
    blocks("blocks", "Blok", new String[]{"&7&oBlok"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    bookFeatures("bookFeatures", "Fitur Buku", new String[]{"&7&oFitur buku"}, GUI.WRITABLE_BOOK),
    bounce("bounce", "Pantulan", new String[]{}, Material.SLIME_BLOCK),
    boundingBoxZone("boundingBoxZone", "Zona Kotak Pembatas", new String[]{""}, GUI.WRITABLE_BOOK),
    boundingBoxZones("boundingBoxZones", "Zona-zona Kotak Pembatas", new String[]{}, GUI.WRITABLE_BOOK),
    brewingStandFeatures("brewingStandFeatures", "Fitur Tungku Ramuan", new String[]{"&7&oFitur untuk", "&7&otungku ramuan"}, Material.BREWING_STAND),
    brewingStandSpeed("brewingStandSpeed", "Kecepatan Tungku Ramuan", new String[]{"&7&oKecepatan dari tungku ramuan"}, Material.BREWING_STAND),
    bundleContent("bundleContent", "Isi Bundle", new String[]{"&7&oIsi bundle"}, FixedMaterial.getMaterial(Arrays.asList("BUNDLE"))),
    cameraOverlay("cameraOverlay", "Overlay Kamera", new String[]{"&7&oOverlay kamera", "&7&oFormat: namespace:id", "&7&oAkan mereferensi model /assets/<namespace>/textures/<id>"}, FixedMaterial.getMaterial(Arrays.asList("BLUE_GLAZED_TERRACOTTA"))),
    canAlwaysEat("canAlwaysEat", "Dapat Selalu Dimakan", new String[]{"&7Apakah pemain dapat selalu memakan makanan ini?"}, null),
    canBeMoved("canBeMoved", "Dapat Dipindahkan", new String[]{"&7&oJika blok dapat dipindahkan"}, Material.LEVER),
    canBeUsedOnlyByTheOwner("canBeUsedOnlyByTheOwner", "Hanya Dapat Digunakan oleh Pemilik", new String[]{"&7&oHanya dapat digunakan oleh pemilik", "&4âš  &cMemerlukan Store item info pada &atrue"}, null),
    cancelActionEnchantInAnvil("cancel-enchant-anvil", "Batalkan Enchant di Anvil", new String[]{"&7&oItem tidak dapat", "&7&odiberi enchant di anvil"}, Material.ANVIL),
    cancelActionRenameInAnvil("cancel-rename-anvil", "Batalkan Penamaan di Anvil", new String[]{"&7&oItem tidak dapat", "&7&odiubah namanya di anvil"}, Material.ANVIL),
    cancelAllCraft("cancel-item-craft", "Batalkan Semua Crafting", new String[]{"&7&oItem tidak dapat digunakan", "&7&ountuk membuat item apapun", "&7&o(Termasuk item kustom)"}, FixedMaterial.getMaterial(Arrays.asList("CRAFTING_TABLE", "WORKBENCH"))),
    cancelAnvil("cancel-anvil", "Batalkan Anvil", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di anvil"}, Material.ANVIL),
    cancelArmorStand("cancel-armorstand", "Batalkan ArmorStand", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di armorstand"}, Material.ARMOR_STAND),
    cancelBeacon("cancel-beacon", "Batalkan Beacon", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di beacon"}, Material.BEACON),
    cancelBrewing("cancel-brewing", "Batalkan Pembuatan Ramuan", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di tungku ramuan"}, FixedMaterial.getBrewingStand()),
    // ... continuing with more translations ...
    cancelCartography("cancel-cartography", "Batalkan Meja Kartografi", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di meja kartografi"}, FixedMaterial.getMaterial(Collections.singletonList("CARTOGRAPHY_TABLE"))),
    cancelComposter("cancel-composter", "Batalkan Komposter", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di komposter"}, FixedMaterial.getMaterial(Collections.singletonList("COMPOSTER"))),
    cancelConsumption("cancel-consumption", "Batalkan Konsumsi", new String[]{"&7&oItem tidak dapat", "&7&odikonsumsi"}, Material.POTION),
    cancelCraft("cancel-item-craft-no-custom", "Batalkan Crafting", new String[]{"&7&oItem tidak dapat digunakan", "&7&ountuk membuat item vanilla"}, FixedMaterial.getMaterial(Arrays.asList("CRAFTING_TABLE", "WORKBENCH"))),
    cancelCrafter("cancel-crafter", "Batalkan Crafter", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di crafter"}, FixedMaterial.getMaterial(Collections.singletonList("CRAFTER"))),
    cancelDecoratedPot("cancel-decorated-pot", "Batalkan Pot Hias", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di pot hias"}, FixedMaterial.getMaterial(Collections.singletonList("DECORATED_POT"))),
    cancelDepositInChest("cancel-deposit-in-chest", "Batalkan Penyimpanan di Peti", new String[]{"&7&oItem tidak dapat", "&7&odisimpan di peti"}, Material.CHEST),
    cancelDepositInFurnace("cancel-deposit-in-furnace", "Batalkan Penyimpanan di Tungku", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di tungku"}, Material.FURNACE),
    cancelDispenser("cancel-dispenser", "Batalkan Dispenser", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di dispenser"}, Material.DISPENSER),
    cancelDropper("cancel-dropper", "Batalkan Dropper", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di dropper"}, Material.DROPPER),
    cancelEnchant("cancel-enchant", "Batalkan Enchant", new String[]{"&7&oItem tidak dapat", "&7&odiberi enchant"}, FixedMaterial.getMaterial(Arrays.asList("ENCHANTING_TABLE", "ENCHANTMENT_TABLE"))),
    cancelEvent("cancelEvent", "Batalkan Event", new String[]{"&7&oBatalkan event vanilla"}, null),
    cancelEventIfError("cancelEventIfError", "Batalkan Event Jika Error", new String[]{"&7&oBatalkan event jika tidak valid"}, null),
    cancelEventIfInCooldown("cancelEventIfInCooldown", "Batalkan Event Jika Dalam Cooldown", new String[]{"&7&oBatalkan event jika pemain dalam cooldown?"}, null),
    cancelEventIfMaxReached("cancelEventIfMaxReached", "Batalkan Event Jika Maksimum Tercapai", new String[]{"&7&oBatalkan event jika maksimum tercapai"}, null),
    cancelEventIfNoPermission("cancelEventIfNoPermission", "Batalkan Event Jika Tidak Ada Izin", new String[]{"&7&oBatalkan event jika pemain tidak memiliki izin"}, null),
    cancelEventIfNotOwner("cancelEventIfNotOwner", "Batalkan Event Jika Bukan Pemilik", new String[]{"&7&oBatalkan event jika bukan pemilik"}, null),
    cancelEventIfNotValid("cancelEventIfNotValid", "Batalkan Event Jika Tidak Valid", new String[]{"&7&oBatalkan event jika blok tidak valid?"}, null),
    cancelEvents("cancelEvents", "Batalkan Event", new String[]{"&7&oFitur pembatalan event"}, Material.ANVIL),
    cancelGravity("cancelGravity", "Batalkan Gravitasi", new String[]{"&7&oJika blok memiliki gravitasi"}, null),
    cancelGrindStone("cancel-grind-stone", "Batalkan Batu Asah", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di batu asah"}, FixedMaterial.getMaterial(Collections.singletonList("GRINDSTONE"))),
    cancelHopper("cancel-hopper", "Batalkan Hopper", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di hopper"}, Material.HOPPER),
    cancelHorn("cancel-horn", "Batalkan Terompet", new String[]{"&7&oTerompet tidak dapat", "&7&odiinteraksi"}, FixedMaterial.getMaterial(Collections.singletonList("GOAT_HORN"))),
    cancelHorse("cancel-horse", "Batalkan Kuda", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di kuda"}, FixedMaterial.getMaterial(Arrays.asList("HORSE_SPAWN_EGG", "SADDLE"))),
    cancelItemBurn("cancel-item-burn", "Batalkan Item Terbakar", new String[]{"&7&oItem tidak dapat", "&7&oterbakar"}, null),
    cancelItemDeleteByCactus("cancel-item-delete-by-cactus", "Batalkan Item Hancur oleh Kaktus", new String[]{"&7&oItem tidak dapat", "&7&odihancurkan oleh kaktus"}, Material.CACTUS),
    cancelItemDeleteByLightning("cancel-item-delete-by-lightning", "Batalkan Item Hancur oleh Petir", new String[]{"&7&oItem tidak dapat", "&7&odihancurkan oleh petir"}, FixedMaterial.getMaterial(Arrays.asList("LIGHTNING_ROD", "LEVER"))),
    cancelItemDrop("cancel-item-drop", "Batalkan Drop Item", new String[]{"&7&oBatalkan drop dari item"}, null),
    cancelItemFrame("cancel-item-frame", "Batalkan Bingkai Item", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di bingkai item"}, Material.ITEM_FRAME),
    cancelItemPlace("cancel-item-place", "Batalkan Penempatan Item", new String[]{"&7&oBatalkan penempatan item"}, null),
    cancelLectern("cancel-lectern", "Batalkan Mimbar", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di mimbar"}, FixedMaterial.getMaterial(Collections.singletonList("LECTERN"))),
    cancelLiquidDestroy("cancelLiquidDestroy", "Batalkan Penghancuran oleh Cairan", new String[]{"&7&oJika blok dihancurkan oleh cairan"}, null),
    cancelLoom("cancel-loom", "Batalkan Alat Tenun", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di alat tenun"}, FixedMaterial.getMaterial(Collections.singletonList("LOOM"))),
    cancelMerchant("cancel-merchant", "Batalkan Pedagang", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di pedagang"}, FixedMaterial.getMaterial(Arrays.asList("VILLAGER_SPAWN_EGG", "EMERALD"))),
    cancelSmithingTable("cancel-smithing-table", "Batalkan Meja Tempa", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di meja tempa"}, FixedMaterial.getMaterial(Collections.singletonList("SMITHING_TABLE"))),
    cancelStoneCutter("cancel-stone-cutter", "Batalkan Pemotong Batu", new String[]{"&7&oItem tidak dapat", "&7&odiletakkan di pemotong batu"}, FixedMaterial.getMaterial(Collections.singletonList("STONECUTTER"))),
    cancelSwapHand("cancel-swap-hand", "Batalkan Tukar Tangan", new String[]{"&7&oItem tidak dapat", "&7&oditukar antar tangan"}, null),
    cancelToolInteractions("cancel-tool-interactions", "Batalkan Interaksi Alat", new String[]{"&7&oBatalkan interaksi dari alat"}, null),
    charged("charged", "Terisi", new String[]{""}, Material.NETHER_STAR),
    chargedProjectiles("chargedProjectiles", "Proyektil Terisi", new String[]{"&7&oProyektil yang terisi"}, Material.ARROW),
    chiseledBookshelfFeatures("chiseledBookshelfFeatures", "Fitur Rak Buku Terukir", new String[]{"&7&oFitur untuk", "&7&oRak Buku Terukir"}, FixedMaterial.getMaterial(Arrays.asList("CHISELED_BOOKSHELF", "BARRIER"))),
    clickToBreak("clickToBreak", "Klik untuk Menghancurkan", new String[]{"&7&oJumlah klik", "&7&oyang diperlukan untuk menghancurkan EB"}, GUI.COMPARATOR),
    color("color", "Warna", new String[]{"&7&oWarna"}, FixedMaterial.getMaterial(Arrays.asList("RED_DYE", "INK_SACK"))),
    colors("colors", "Warna", new String[]{"&7&oWarna dari kembang api"}, GUI.CLOCK),
    commands_block("commands", "Perintah Blok", new String[]{"&7&oPerintah blok untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    commands_player("commands", "Perintah Pemain", new String[]{"&7&oPerintah pemain untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    comparator("comparator", "Komparator", new String[]{"&7&oKomparator dari kondisi"}, Material.COMPASS),
    consoleCommands("consoleCommands", "Perintah Konsol", new String[]{"&7&oPerintah konsol untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    consumableFeatures("consumableFeatures", "Fitur Konsumsi", new String[]{"&7&oFitur Konsumsi"}, FixedMaterial.getMaterial(Arrays.asList("POTION"))),
    consumeSeconds("consumeSeconds", "Waktu Konsumsi", new String[]{"&7&oWaktu konsumsi dalam detik"}, GUI.CLOCK),
    containerContent("containerContent", "Isi Wadah", new String[]{"&7&oIsi wadah"}, Material.CHEST),
    containerFeatures("containerFeatures", "Fitur Wadah", new String[]{"&7&oFitur untuk", "&7&opeti, hopper, .."}, Material.CHEST),
    containsMineInCube("containsMineInCube", "Berisi Tambang dalam Kubus", new String[]{"&7&oPeriksa apakah kubus berisi tambang"}, Material.TNT),
    cooldown("cooldown", "Cooldown", new String[]{"&7&oCooldown"}, GUI.CLOCK),
    cooldownGroup("cooldownGroup", "Grup Cooldown", new String[]{"&7&oGrup cooldown"}, GUI.WRITABLE_BOOK),
    cooldownMsg("cooldownMsg", "Pesan Cooldown", new String[]{"&7&oPesan cooldown"}, GUI.WRITABLE_BOOK),
    cooldownFeatures("cooldownFeatures", "Opsi Cooldown", new String[]{"&7&oCooldown"}, GUI.CLOCK),
    cooldown_activators("activators", "Daftar Pengaktif", new String[]{"&7&oDaftar Pengaktif", "&eALL &7&ountuk semua pengaktif"}, GUI.WRITABLE_BOOK),
    correctForDrops("correctForDrops", "Koreksi untuk Drop", new String[]{"&7&oAtur apakah aturan ini dianggap", "&7&osebagai alat optimal untuk blok yang tercantum", "&7&ooleh aturan ini dan akan menjatuhkan item."}, Material.LEVER),
    creationType("creationType", "Jenis Pembuatan", new String[]{"&7&oJenis pembuatan"}, Material.COMPASS),
    critical("critical", "Kritis", new String[]{}, Material.DIAMOND_AXE),
    customConditions("customConditions", "Kondisi Kustom", new String[]{""}, Material.ANVIL),
    customModelData("customModelData", "Data Model Kustom", new String[]{"&7&oData model kustom"}, Material.ITEM_FRAME),
    customModelData_ei("customModelData", "Data model kustom", new String[]{"&7&oData model kustom dari item", "&7&oUntuk mengkustomisasi tekstur item", "&2âœ” &a&oTutorial di wiki!"}, FixedMaterial.getMaterial(Arrays.asList("BLUE_GLAZED_TERRACOTTA"))),
    customName("customName", "Nama Kustom", new String[]{}, Material.NAME_TAG),
    customNameVisible("customNameVisible", "Nama Kustom Terlihat", new String[]{}, Material.NAME_TAG),
    customPitch("customPitch", "Pitch Kustom", new String[]{"&7&oSesuaikan rotasi pitch", "&7&ojika diperlukan"}, GUI.COMPARATOR),
    customStackSize("customStackSize", "Ukuran Tumpukan Kustom", new String[]{"&7&oSesuaikan ukuran tumpukan"}, Material.BUCKET),
    customY("customY", "Y Kustom", new String[]{"&7&oSesuaikan lokasi Y", "&7&ojika diperlukan"}, GUI.COMPARATOR),
    damage("damage", "Kerusakan", new String[]{"&7&o-1 untuk kerusakan vanilla"}, Material.DIAMOND_SWORD),
    damagePerBlock("damagePerBlock", "Kerusakan Per Blok", new String[]{"&7&oAtur jumlah daya tahan yang akan dihapus", "&7&odari alat setiap kali blok dihancurkan."}, GUI.CLOCK),
    damageableOnHurt("damageableOnHurt", "Dapat Rusak Saat Terluka", new String[]{"&7&oItem akan mengalami kerusakan saat pemain terluka"}, null),
    defaultMiningSpeed("defaultMiningSpeed", "Kecepatan Menambang Default", new String[]{"&7&oKecepatan menambang default dari alat"}, GUI.CLOCK),
    default_double("default", "Nilai Angka", new String[]{"&7&oNilai default variabel"}, GUI.WRITABLE_BOOK),
    default_list("default", "Nilai Daftar", new String[]{"&7&oNilai default variabel"}, GUI.WRITABLE_BOOK),
    default_string("default", "Nilai String", new String[]{"&7&oNilai default variabel"}, GUI.WRITABLE_BOOK),
    delay("delay", "Penundaan", new String[]{"&7&oPenundaan antara setiap aktivasi", "&cMin: &65 ticks"}, GUI.CLOCK),
    delayInTick("delayInTick", "Penundaan dalam Tick", new String[]{"&7&oApakah penundaan dalam ticks?"}, null),
    delayOfTrade("delayOfTrade", "Penundaan Perdagangan", new String[]{"&7&oPenundaan perdagangan ini", "&7&oDalam &adetik"}, GUI.CLOCK),
    desactiveDrops("desactiveDrops", "Hapus Drop", new String[]{"&7&oHapus drop"}, null),
    description("description", "Deskripsi", new String[]{"&7&oDeskripsi perdagangan ini"}, GUI.WRITABLE_BOOK),
    despawnDelay("despawnDelay", "Penundaan Despawn", new String[]{"&7&o-1 untuk despawn vanilla"}, Material.DEAD_BUSH),
    detailedBlocks("detailedBlocks", "Blok Terperinci", new String[]{"&7&oJalankan pengaktif", "&7&ohanya untuk blok tertentu", "&7&okosong = semua blok"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    detailedClick("detailedClick", "Klik Terperinci", new String[]{"&7&oKlik spesifik"}, Material.COMPASS),
    detailedCommands("detailedCommands", "Perintah Terperinci", new String[]{"&7&oTentukan daftar perintah yang", "&7&odapat dipengaruhi", "&7&okosong = tidak ada perintah", "&7Contoh: &agamemode creative"}, GUI.WRITABLE_BOOK),
    detailedDamageCauses("detailedDamageCauses", "Penyebab Kerusakan Terperinci", new String[]{"&7&oTentukan daftar penyebab kerusakan yang", "&7&odapat dipengaruhi", "&7&okosong = semua penyebab"}, Material.BONE),
    detailedEffects("detailedEffects", "Efek Terperinci", new String[]{"&7&oJalankan pengaktif", "&7&ohanya untuk efek tertentu", "&7&okosong = semua efek"}, FixedMaterial.getMaterial(Arrays.asList("POTION", "REDSTONE"))),
    detailedEntities("detailedEntities", "Entitas Terperinci", new String[]{"&7&oTentukan daftar entitas yang", "&7&odapat dipengaruhi", "&7&okosong = semua entitas"}, FixedMaterial.getMaterial(Arrays.asList("ZOMBIE_HEAD", "MONSTER_EGG"))),
    detailedInventories("detailedInventories", "Inventaris Terperinci", new String[]{"&7&oTentukan daftar InventoryType yang diterima"}, GUI.WRITABLE_BOOK),
    detailedItems("detailedItems", "Item Terperinci", new String[]{"&7&oJalankan pengaktif", "&7&ohanya untuk item tertentu", "&7&okosong = semua item"}, FixedMaterial.getMaterial(Arrays.asList("TORCH"))),
    detailedMessagesContains("detailedMessagesContains", "Pesan Terperinci Mengandung", new String[]{"&7&oTentukan daftar pesan yang diterima", "&7&o(Mengandung)", "&7&okosong = tidak ada perintah", "&7Contoh: &ateman"}, GUI.WRITABLE_BOOK),
    detailedMessagesEquals("detailedMessagesEquals", "Pesan Terperinci Sama Dengan", new String[]{"&7&oTentukan daftar pesan yang diterima", "&7&o(Sama Dengan)", "&7&okosong = tidak ada perintah", "&7Contoh: &aHalo temanku"}, GUI.WRITABLE_BOOK),
    detailedSlots("detailedSlots", "Slot Terperinci", new String[]{"&7&oSlot dimana", "&7&opengaktif akan bekerja"}, Material.ARMOR_STAND),
    detailedTargetBlocks("detailedTargetBlocks", "Blok Target Terperinci", new String[]{"&7&oTentukan daftar blok yang", "&7&odapat dipengaruhi", "&7&okosong = semua blok"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    detailedTargetEntities("detailedTargetEntities", "Entitas Target Terperinci", new String[]{"&7&oTentukan daftar entitas yang", "&7&odapat dipengaruhi", "&7&okosong = semua entitas"}, FixedMaterial.getMaterial(Arrays.asList("ZOMBIE_HEAD", "MONSTER_EGG"))),
    directionalFeatures("directionalFeatures", "Fitur Arah", new String[]{"&7&oFitur untuk", "&7&oarah"}, Material.COMPASS),
    disableEnchantGlide("disableEnchantGlide", "Nonaktifkan Efek Glide Enchant", new String[]{"&7&oNonaktifkan efek glide enchant"}, Material.BEACON),
    disableStack("disableStack", "Nonaktifkan Tumpukan", new String[]{"&7&oNonaktifkan penumpukan item?"}, null),
    disabledWorlds("disabledWorlds", "Dunia yang Dinonaktifkan", new String[]{"&7&oDunia yang dinonaktifkan"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    dispensable("dispensable", "Dapat Didispenser", new String[]{"&7&oItem dapat didispenser"}, null),
    displayCommands("displayCommands", "Tampilkan Perintah", new String[]{"&7&oPerintah tampilan untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    displayConditions("displayConditions", "Fitur Kondisi Tampilan", new String[]{"&7&oTampilkan kondisi di lore"}, GUI.WRITABLE_BOOK),
    displayConditions_conditions("displayConditions", "Tampilkan Kondisi", new String[]{""}, Material.ANVIL),
    displayCooldownMessage("displayCooldownMessage", "Tampilkan Pesan Cooldown", new String[]{"&7&oTampilkan pesan cooldown"}, null),
    displayFeatures("displayFeatures", "Fitur Tampilan", new String[]{"&7&oFitur tampilan"}, Material.ITEM_FRAME),
    displayNameDrop("displayNameDrop", "Tampilkan nama kustom", new String[]{"&7&oTampilkan nama kustom di atas item"}, null),
    dropBlockIfItIsBroken("dropBlockIfItIsBroken", "Drop blok jika hancur", new String[]{"&7&oJika blok hancur,", "&7&oakan menjatuhkan blok"}, Material.LEVER),
    dropBlockWhenItBurns("dropBlockWhenItBurns", "Drop blok saat terbakar", new String[]{"&7&oJika blok terbakar,", "&7&oakan menjatuhkan blok"}, Material.LEVER),
    dropBlockWhenItExplodes("dropBlockWhenItExplodes", "Drop blok saat meledak", new String[]{"&7&oJika blok meledak,", "&7&oakan menjatuhkan blok"}, Material.LEVER),
    dropFeatures("dropFeatures", "Opsi Drop", new String[]{"&7&oFitur drop"}, Material.ANVIL),
    dropType("dropType", "Tipe Drop", new String[]{"&7&oTipe drop"}, Material.COMPASS),
    durability("durability", "Daya Tahan", new String[]{"&7&oDaya tahan item"}, Material.ANVIL),
    durability_features("durability", "Fitur Daya Tahan", new String[]{"&7&oFitur daya tahan"}, Material.ANVIL),
    duration("duration", "Durasi", new String[]{"&7&oDurasi efek ramuan", "&4âš  &cDalam ticks!", "&7&o1 detik = 20 ticks"}, GUI.CLOCK),
    eastValue("eastValue", "Nilai Timur", new String[]{"&7&oNilai timur"}, GUI.CLOCK),
    eatSeconds("eatSeconds", "Waktu Makan", new String[]{"&7Waktu dalam detik untuk memakan makanan"}, GUI.CLOCK),
    editorIcon("editorIcon", "Ikon Editor", new String[]{}, Material.LEVER),
    effects("effects", "Efek", new String[]{"&7&oEfek-efek"}, FixedMaterial.getMaterial(Arrays.asList("POTION", "REDSTONE"))),
    enable("enable", "Aktifkan", new String[]{"&7&oAktifkan fitur alat"}, Material.LEVER),
    enableArmorTrim("enableArmorTrim", "Aktifkan Trim Armor", new String[]{"&7&oAktifkan trim armor"}, null),
    enableFeature("enableFeature", "Aktifkan Fitur", new String[]{"&7&oAktifkan atau nonaktifkan fitur ini"}, null),
    enableRarity("enableRarity", "Aktifkan Kelangkaan", new String[]{"&7&oAktifkan atau nonaktifkan fitur kelangkaan"}, null),
    enableSound("enableSound", "Aktifkan Suara", new String[]{"&7&oAktifkan suara"}, null),
    enableVisualCooldown("enableVisualCooldown", "Aktifkan Cooldown Visual", new String[]{"&7&oAktifkan cooldown visual", "&7&oMemerlukan pengaturan", "&e&ocooldownGroup &7&odi pengaturan item"}, null),
    enabled("enabled", "Diaktifkan", new String[]{"&7&oJika event diaktifkan"}, null),
    enchantment("enchantment", "Enchantment", new String[]{"&7&oEnchantment"}, Material.ENCHANTED_BOOK),
    enchantmentWithLevel("enchantmentWithLevel", "Enchantment dengan level", new String[]{"&7&oEnchantment dengan level"}, Material.ENCHANTED_BOOK),
    enchantments("enchantments", "Enchantment", new String[]{"&7&oEnchantment dari item"}, Material.ENCHANTED_BOOK),
    endDate("endDate", "Tanggal Berakhir", new String[]{"&7&oTanggal berakhir"}, GUI.CLOCK),
    entityCommands("entityCommands", "Perintah Entitas", new String[]{"&7&oPerintah entitas untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    entityConditions("entityConditions", "Kondisi Entitas", new String[]{""}, Material.ANVIL),
    entityCooldownFeatures("entityCooldownFeatures", "Opsi Cooldown Entitas", new String[]{"&7&oCooldown entitas"}, GUI.CLOCK),
    entityType("entityType", "Tipe Entitas", new String[]{"&7&oTipe entitas"}, FixedMaterial.getMaterial(Arrays.asList("ZOMBIE_HEAD", "MONSTER_EGG"))),
    equipModel("equipModel", "Model Perlengkapan", new String[]{"&7&oModel perlengkapan/armor", "&7&oFormat: namespace:id", "&7&oAkan mereferensi model /assets/<namespace>/models/equipment/<id>"}, FixedMaterial.getMaterial(Arrays.asList("BLUE_GLAZED_TERRACOTTA"))),
    equippableFeatures("equippableFeatures", "Fitur yang Dapat Dipakai", new String[]{"&7&oFitur yang dapat dipakai"}, Material.DIAMOND_CHESTPLATE),
    errorMessage("errorMessage", "Pesan Error", new String[]{"&7&oPesan error"}, GUI.WRITABLE_BOOK),
    errorMsg("errorMsg", "Pesan Error", new String[]{"&7&oPesan error"}, GUI.WRITABLE_BOOK),
    executableItem("executableItem", "Item yang Dapat Dieksekusi", new String[]{"&7&oTentukan ExecutableItem yang diperlukan"}, Material.DIAMOND),
    fadeColors("fadeColors", "Warna Memudar", new String[]{"&7&oWarna memudar dari kembang api"}, GUI.CLOCK),
    fireworkColor("fireworkColor", "Warna Kembang Api", new String[]{"&7&oWarna dari kembang api"}, FixedMaterial.getMaterial(Arrays.asList("FIREWORK_STAR", "FIREWORK_CHARGE"))),
    fireworkExplosion("fireworkExplosion", "Ledakan Kembang Api", new String[]{"&7&oLedakan dari kembang api"}, FixedMaterial.getMaterial(Arrays.asList("FIREWORK_STAR"))),
    fireworkExplosions("fireworkExplosions", "Ledakan Kembang Api", new String[]{"&7&oLedakan-ledakan dari kembang api"}, FixedMaterial.getMaterial(Arrays.asList("FIREWORK_STAR"))),
    fireworkFeatures("fireworkFeatures", "Fitur Kembang Api", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("FIREWORK_ROCKET"))),
    food("food", "Fitur Makanan", new String[]{"&7&oFitur makanan"}, Material.COOKED_BEEF),
    for_("for", "Untuk", new String[]{"&7&oUntuk"}, GUI.COMPARATOR),
    forceBlockFaceOnPlace("forceBlockFaceOnPlace", "Paksa sisi blok saat ditempatkan", new String[]{"&7&oPaksa sisi blok ketika blok ditempatkan"}, Material.LEVER),
    fortuneChance("fortuneChance", "Peluang Fortune", new String[]{"&7&oPeluang mendapatkan bonus item", "&7&oMin: &e0 &7&o/ Max: &e1"}, Material.FURNACE),
    fortuneMultiplier("fortuneMultiplier", "Pengganda Fortune", new String[]{"&7&oPengganda dari efek fortune"}, Material.FURNACE),
    from("from", "Dari", new String[]{""}, GUI.CLOCK),
    furnaceFeatures("furnaceFeatures", "Fitur Tungku", new String[]{"&7&oFitur untuk", "&7&otungku"}, Material.FURNACE),
    furnaceSpeed("furnaceSpeed", "Kecepatan Tungku", new String[]{"&7&oKecepatan dari tungku"}, Material.FURNACE),
    giveFirstJoin("giveFirstJoin", "Berikan saat Pertama Bergabung", new String[]{"&7&oAktifkan fitur"}, null),
    giveFirstJoinAmount("giveFirstJoinAmount", "Jumlah", new String[]{"&7&oJumlah yang diberikan"}, GUI.CLOCK),
    giveFirstJoinFeatures("giveFirstJoin", "Fitur Pemberian Pertama Bergabung", new String[]{"&7&oFitur pemberian pertama bergabung"}, Material.ANVIL),
    giveFirstJoinSlot("giveFirstJoinSlot", "Slot", new String[]{"&7&oSlot antara 0 dan 8 termasuk"}, GUI.CLOCK),
    glider("glider", "Peluncur", new String[]{"&7&oPeluncur"}, FixedMaterial.getMaterial(Arrays.asList("ELYTRA"))),
    globalCooldownFeatures("globalCooldownFeatures", "Opsi Cooldown Global", new String[]{"&7&oCooldown global", "&7&o(Untuk &eSEMUA &7&opemain dan entitas)"}, GUI.CLOCK),
    glow("glow", "Kilau Item", SCore.is1v20v5Plus() ? new String[]{"&7&oEfek kilau item"} : new String[]{"&7&oEfek kilau item", "&4âš  &cMenambahkan enchant tidak berguna", "&c+ sembunyikan enchant"}, Material.BEACON),
    glowColor("glowColor", "Warna Kilau", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("RED_DYE", "INK_SACK"))),
    glowDrop("glowDrop", "Kilau drop", new String[]{"&7&oKilau drop"}, null),
    glowDropColor("glowDropColor", "Warna Kilau Drop", new String[]{"&7&oWarna dari kilau"}, Material.REDSTONE),
    glowDuration("glowDuration", "Durasi Kilau", new String[]{"&7&oDurasi dari efek kilau"}, GUI.CLOCK),
    glowWhenPowered("glowWhenPowered", "Berkilau saat Aktif", new String[]{"&7&oBerkilau saat aktif"}, GUI.CLOCK),
    glowWhenTrade("glowWhenTrade", "Berkilau saat Berdagang", new String[]{"&7&oPiglin berkilau selama perdagangan"}, Material.GLOWSTONE),
    glowing("glowing", "Berkilau", new String[]{}, Material.BEACON),
    gravity("gravity", "Gravitasi", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("ELYTRA", "FEATHER"))),
    hasConsumeParticles("hasConsumeParticles", "Memiliki Partikel Konsumsi", new String[]{"&7&oMemiliki partikel konsumsi"}, Material.ANVIL),
    hasExecutableItem("hasExecutableItem", "Memiliki ExecutableItem", new String[]{"&7&oFitur memiliki ExecutableItem"}, Material.DIAMOND),
    hasIcon("hasIcon", "Ikon", new String[]{"&7&oJika efek ramuan memiliki ikon"}, null),
    hasItem("hasItem", "Memiliki Item", new String[]{"&7&oFitur memiliki item"}, Material.STONE),
    hasParticles("hasParticles", "Partikel", new String[]{"&7&oJika efek ramuan memiliki partikel"}, null),
    hasTrail("hasTrail", "Memiliki Trail", new String[]{"&7&oApakah ledakan memiliki efek trail (berlian)."}, null),
    hasTwinkle("hasTwinkle", "Memiliki Kerlip", new String[]{"&7&oApakah ledakan memiliki efek kerlip (bubuk glowstone)."}, null),
    headDBID("headDBID", "ID HeadDB", new String[]{"&7&oID HeadDB dari kepala", "&7&oBerfungsi dengan:", "&7&o- &bHeadDB(Gratis)", "&7&o- &cHead Database(Premium)"}, FixedMaterial.getHead()),
    headFeatures("headFeatures", "Fitur Kepala", new String[]{"&7&oTekstur untuk kepala"}, FixedMaterial.getHead()),
    headValue("headValue", "Nilai Kepala", new String[]{"&7&oNilai dari kepala", "&eminecraft-heads.com"}, FixedMaterial.getHead()),
    height("height", "Tinggi", new String[]{"&7&oTekan F3 + b untuk melihat zona"}, GUI.CLOCK),
    hideAdditionalTooltip("hideAdditionalTooltip", "Sembunyikan tooltip tambahan", new String[]{"&7&oSembunyikan tooltip tambahan"}, null),
    hideArmorTrim("hideArmorTrim", "Sembunyikan trim armor", new String[]{"&7&oSembunyikan trim armor"}, null),
    hideAttributes("hideAttributes", "Sembunyikan atribut", new String[]{"&7&oSembunyikan atribut"}, null),
    hideDestroys("hideDestroys", "Sembunyikan penghancuran", new String[]{"&7&oSembunyikan penghancuran"}, null),
    hideDye("hideDye", "Sembunyikan pewarna", new String[]{"&7&oSembunyikan pewarna"}, null),
    hideEnchantments("hideEnchantments", "Sembunyikan enchantment", new String[]{"&7&oSembunyikan enchantment"}, null),
    hidePlacedOn("hidePlacedOn", "Sembunyikan penempatan", new String[]{"&7&oSembunyikan penempatan"}, null),
    hidePotionEffects("hidePotionEffects", "Sembunyikan efek ramuan / tag spanduk", new String[]{"&7&oSembunyikan efek ramuan", "&7&odan tag spanduk"}, null),
    hideTooltip("hideToolTip", "Sembunyikan tooltip", new String[]{"&7&oSembunyikan tooltip"}, null),
    hideUnbreakable("hideUnbreakable", "Sembunyikan tidak dapat hancur", new String[]{"&7&oSembunyikan tidak dapat hancur"}, null),
    hideUsage("hideUsage", "Sembunyikan penggunaan", new String[]{"&7&oSembunyikan penggunaan"}, null),
    hiders("hiders", "Penyembunyi", new String[]{"&7&oFitur penyembunyi", "&7&oPenyembunyi untuk:", "&7&oAtribut, Enchant, ..."}, Material.ANVIL),
    hitSound("hitSound", "Suara Tembak", new String[]{"&7&oSuara tembakan"}, Material.NOTE_BLOCK),
    hopperFeatures("hopperFeatures", "Fitur Hopper", new String[]{"&7&oFitur untuk", "hopper, .."}, Material.HOPPER),
    icon("icon", "Ikon", new String[]{}, Material.STONE),
    ifAdult("ifAdult", "Jika Dewasa", new String[]{}, Material.ANVIL),
    ifBaby("ifBaby", "Jika Bayi", new String[]{}, Material.ANVIL),
    ifBlockAge("ifBlockAge", "Jika Usia Blok", new String[]{}, Material.ANVIL),
    ifBlockLocationX("ifBlockLocationX", "Jika Lokasi X Blok", new String[]{}, Material.ANVIL),
    ifBlockLocationY("ifBlockLocationY", "Jika Lokasi Y Blok", new String[]{}, Material.ANVIL),
    ifBlockLocationZ("ifBlockLocationZ", "Jika Lokasi Z Blok", new String[]{}, Material.ANVIL),
    ifBlocking("ifBlocking", "Jika Memblokir", new String[]{}, null),
    ifCanBreakTargetedBlock("ifCanBreakTargetedBlock", "Jika Dapat Menghancurkan Blok Target", new String[]{}, Material.ANVIL),
    ifContainerContains("ifContainerContains", "Jika Wadah Berisi", new String[]{}, Material.ANVIL),
    ifContainerContainsEI("ifContainerContainsEI", "Jika Wadah Berisi EI", new String[]{}, Material.ANVIL),
    ifContainerContainsSellableItems("ifContainerContainsSellableItems", "Jika Wadah Berisi Item yang Dapat Dijual", new String[]{}, Material.ANVIL),
    ifContainerEmpty("ifContainerEmpty", "Jika Wadah Kosong", new String[]{}, Material.ANVIL),
    ifContainerNotEmpty("ifContainerNotEmpty", "Jika Wadah Tidak Kosong", new String[]{}, Material.ANVIL),
    ifCrossbowMustBeCharged("ifCrossbowMustBeCharged", "Jika Crossbow Harus Diisi", new String[]{}, FixedMaterial.getMaterial(Collections.singletonList("CROSSBOW"))),
    ifCrossbowMustNotBeCharged("ifCrossbowMustNotBeCharged", "Jika Crossbow Tidak Boleh Diisi", new String[]{}, FixedMaterial.getMaterial(Collections.singletonList("CROSSBOW"))),
    ifCursorDistance("ifCursorDistance", "Jika Jarak Kursor", new String[]{}, Material.ANVIL),
    ifDurability("ifDurability", "Jika Daya Tahan", new String[]{}, Material.ANVIL),
    ifEntityHealth("ifEntityHealth", "Jika Kesehatan Entitas", new String[]{}, Material.ANVIL),
    ifFlying("ifFlying", "Jika Terbang", new String[]{}, null),
    ifFromSpawner("ifFromSpawner", "Jika Dari Spawner", new String[]{}, Material.ANVIL),
    ifFrozen("ifFrozen", "Jika Membeku", new String[]{}, Material.ANVIL),
    ifGliding("ifGliding", "Jika Meluncur", new String[]{}, null),
    ifGlowing("ifGlowing", "Jika Bersinar", new String[]{}, Material.ANVIL),
    ifHasAI("ifHasAI", "Jika Memiliki AI", new String[]{}, Material.ANVIL),
    ifHasEnchant("ifHasEnchant", "Jika Memiliki Enchant", new String[]{"&7Jika memiliki kondisi enchant"}, Material.ANVIL),
    ifHasExecutableItems("ifHasExecutableItems", "Jika Memiliki ExecutableItems", new String[]{}, Material.DIAMOND),
    ifHasItems("ifHasItems", "Jika Memiliki Item", new String[]{}, Material.STONE),
    ifHasNotEnchant("ifHasNotEnchant", "Jika Tidak Memiliki Enchant", new String[]{"&7Jika tidak memiliki kondisi enchant"}, Material.ANVIL),
    ifHasNotExecutableItems("ifHasNotExecutableItems", "Jika Tidak Memiliki ExecutableItems", new String[]{}, Material.DIAMOND),
    ifHasNotItems("ifHasNotItems", "Jika Tidak Memiliki Item", new String[]{}, Material.STONE),
    ifHasPermission("ifHasPermission", "Jika Memiliki Izin", new String[]{}, Material.ANVIL),
    ifHasSaddle("ifHasSaddle", "Jika Memiliki Pelana", new String[]{}, Material.ANVIL),
    ifHasTag("ifHasTag", "Jika Memiliki Tag", new String[]{"&7&oTag yang diizinkan"}, Material.ANVIL),
    ifInBiome("ifInBiome", "Jika Di Bioma", new String[]{}, Material.ANVIL),
    ifInRegion("ifInRegion", "Jika Di Region", new String[]{}, Material.ANVIL),
    ifInWorld("ifInWorld", "Jika Di Dunia", new String[]{}, Material.ANVIL),
    ifInvulnerable("ifInvulnerable", "Jika Kebal", new String[]{}, Material.ANVIL),
    ifIsInTheAir("ifIsInTheAir", "Jika Di Udara", new String[]{}, null),
    ifIsInTheBlock("ifIsInTheBlock", "Jika Di Dalam Blok", new String[]{}, Material.ANVIL),
    ifIsNotInTheAir("ifIsNotInTheAir", "Jika Tidak Di Udara", new String[]{}, null),
    ifIsNotInTheBlock("ifIsNotInTheBlock", "Jika Tidak Di Dalam Blok", new String[]{}, Material.ANVIL),
    ifIsNotOnFire("ifIsNotOnFire", "Jika Tidak Terbakar", new String[]{}, null),
    ifIsNotOnTheBlock("ifIsNotOnTheBlock", "Jika Tidak Di Atas Blok", new String[]{}, Material.ANVIL),
    ifIsOnFire("ifIsOnFire", "Jika Terbakar", new String[]{}, null),
    ifIsOnTheBlock("ifIsOnTheBlock", "Jika Di Atas Blok", new String[]{}, Material.ANVIL),
    ifIsPowered("ifIsPowered", "Jika Dialiri Daya", new String[]{}, Material.ANVIL),
    ifLightLevel("ifLightLevel", "Jika Level Cahaya", new String[]{}, Material.ANVIL),
    ifMustBeNatural("ifMustBeNatural", "Jika Harus Alami", new String[]{}, Material.ANVIL),
    ifMustBeNotNatural("ifMustBeNotNatural", "Jika Tidak Boleh Alami", new String[]{}, Material.ANVIL),
    ifMustBeNotPowered("ifMustBeNotPowered", "Jika Tidak Boleh Dialiri Daya", new String[]{}, Material.ANVIL),
    ifMustBeEB("ifMustBeEB", "Jika harus EB", new String[]{}, Material.ANVIL),
    ifName("ifName", "Jika Nama", new String[]{}, Material.ANVIL),
    ifNamed("ifNamed", "Jika Diberi Nama", new String[]{}, Material.ANVIL),
    ifNeedPlayerConfirmation("ifNeedPlayerConfirmation", "Jika Membutuhkan Konfirmasi Pemain", new String[]{}, null),
    ifNoPlayerMustBeOnTheBlock("ifNoPlayerMustBeOnTheBlock", "Jika Tidak Ada Pemain yang Harus Di Atas Blok", new String[]{}, Material.ANVIL),
    ifNotBlocking("ifNotBlocking", "Jika Tidak Memblokir", new String[]{}, null),
    ifNotEntityType("ifNotEntityType", "Jika Bukan Tipe Entitas", new String[]{}, Material.ANVIL),
    ifNotFlying("ifNotFlying", "Jika Tidak Terbang", new String[]{}, null),
    ifNotFromSpawner("ifNotFromSpawner", "Jika Bukan Dari Spawner", new String[]{}, Material.ANVIL),
    ifNotGliding("ifNotGliding", "Jika Tidak Meluncur", new String[]{}, null),
    ifNotHasAI("ifNotHasAI", "Jika Tidak Memiliki AI", new String[]{}, Material.ANVIL),
    ifNotHasPermission("ifNotHasPermission", "Jika Tidak Memiliki Izin", new String[]{}, Material.ANVIL),
    ifNotHasSaddle("ifNotHasSaddle", "Jika Tidak Memiliki Pelana", new String[]{}, Material.ANVIL),
    ifNotHasTag("ifNotHasTag", "Jika Tidak Memiliki Tag", new String[]{"&7&oTag yang dilarang"}, Material.ANVIL),
    ifNotInBiome("ifNotInBiome", "Jika Tidak Di Bioma", new String[]{}, Material.ANVIL),
    ifNotInRegion("ifNotInRegion", "Jika Tidak Di Region", new String[]{}, Material.ANVIL),
    ifNotInWorld("ifNotInWorld", "Jika Tidak Di Dunia", new String[]{}, Material.ANVIL),
    ifNotNamed("ifNotNamed", "Jika Tidak Diberi Nama", new String[]{}, Material.ANVIL),
    ifNotOwnerOfTheEI("ifNotOwnerOfTheEI", "Jika Bukan Pemilik EI", new String[]{}, null),
    ifNotSneaking("ifNotSneaking", "Jika Tidak Mengendap", new String[]{}, null),
    ifNotSprinting("ifNotSprinting", "Jika Tidak Berlari", new String[]{}, null),
    ifNotStunned("ifNotStunned", "Jika Tidak Pingsan", new String[]{"&7&oOleh perintah pemain kustom", "&7&o&eSTUN_ENABLE"}, null),
    ifNotSwimming("ifNotSwimming", "Jika Tidak Berenang", new String[]{}, null),
    ifNotTamed("ifNotTamed", "Jika Tidak Dijinakkan", new String[]{}, Material.ANVIL),
    ifNotTargetBlock("ifNotTargetBlock", "Jika Bukan Blok Target", new String[]{}, Material.ANVIL),
    ifOnFire("ifOnFire", "Jika Terbakar", new String[]{}, Material.ANVIL),
    ifOwnerOfTheEI("ifOwnerOfTheEI", "Jika Pemilik EI", new String[]{}, null),
    ifPlantFullyGrown("ifPlantFullyGrown", "Jika Tanaman Tumbuh Penuh", new String[]{}, Material.ANVIL),
    ifPlantNotFullyGrown("ifPlantNotFullyGrown", "Jika Tanaman Belum Tumbuh Penuh", new String[]{}, Material.ANVIL),
    ifPlayerEXP("ifPlayerEXP", "Jika EXP Pemain", new String[]{}, Material.ANVIL),
    ifPlayerFoodLevel("ifPlayerFoodLevel", "Jika Level Makanan Pemain", new String[]{}, Material.ANVIL),
    ifPlayerHasEffect("ifPlayerHasEffect", "Jika Pemain Memiliki Efek", new String[]{}, Material.ANVIL),
    ifPlayerHasEffectEquals("ifPlayerHasEffectEquals", "Jika Pemain Memiliki Efek Sama", new String[]{}, Material.ANVIL),
    ifPlayerHealth("ifPlayerHealth", "Jika Kesehatan Pemain", new String[]{}, Material.ANVIL),
    ifPlayerLevel("ifPlayerLevel", "Jika Level Pemain", new String[]{}, Material.ANVIL),
    ifPlayerMounts("ifPlayerMounts", "Jika Pemain Menunggang", new String[]{}, Material.ANVIL),
    ifPlayerMustBeInHisTown("ifPlayerMustBeInHisTown", "Jika Pemain Harus Di Kotanya", new String[]{}, null),
    ifPlayerMustBeOnHisClaim("ifPlayerMustBeOnHisClaim", "Jika Pemain Harus Di Klaimnya", new String[]{}, null),
    ifPlayerMustBeOnHisClaimOrWilderness("ifPlayerMustBeOnHisClaimOrWilderness", "Jika Pemain Harus Di Klaimnya atau Wilderness", new String[]{}, null),
    ifPlayerMustBeOnHisIsland("ifPlayerMustBeOnHisIsland", "Jika Pemain Harus Di Pulaunya", new String[]{}, null),
    ifPlayerMustBeOnHisPlot("ifPlayerMustBeOnHisPlot", "Jika Pemain Harus Di Plot-nya", new String[]{}, null),
    ifPlayerMustBeOnTheBlock("ifPlayerMustBeOnTheBlock", "Jika Pemain Harus Di Atas Blok", new String[]{}, Material.ANVIL),
    ifPlayerNotHasEffect("ifPlayerNotHasEffect", "Jika Pemain Tidak Memiliki Efek", new String[]{}, Material.ANVIL),
    ifPlayerNotMounts("ifPlayerNotMounts", "Jika Pemain Tidak Menunggang", new String[]{}, Material.ANVIL),
    ifPosX("ifPosX", "Jika Posisi X Pemain", new String[]{}, Material.ANVIL),
    ifPosY("ifPosY", "Jika Posisi Y Pemain", new String[]{}, Material.ANVIL),
    ifPosZ("ifPosZ", "Jika Posisi Z Pemain", new String[]{}, Material.ANVIL),
    ifPowered("ifPowered", "Jika Dialiri Daya", new String[]{}, Material.ANVIL),
    ifSneaking("ifSneaking", "Jika Mengendap", new String[]{}, null),
    ifSprinting("ifSprinting", "Jika Berlari", new String[]{}, null),
    ifStunned("ifStunned", "Jika Pingsan", new String[]{"&7&oOleh perintah pemain kustom", "&7&o&eSTUN_ENABLE"}, null),
    ifSwimming("ifSwimming", "Jika Berenang", new String[]{}, null),
    ifTamed("ifTamed", "Jika Dijinakkan", new String[]{}, Material.ANVIL),
    ifTargetBlock("ifTargetBlock", "Jika Blok Target", new String[]{}, Material.ANVIL),
    ifUsage("ifUsage", "Jika Penggunaan", new String[]{}, Material.ANVIL),
    ifWeather("ifWeather", "Jika Cuaca", new String[]{"&7Cuaca yang diizinkan"}, Material.ANVIL),
    ifWorldTime("ifWorldTime", "Jika Waktu Dunia", new String[]{}, Material.ANVIL),
    ignoreKeepDefaultAttributesFeature("ignoreKeepDefaultAttributesFeature", "Abaikan Fitur Pertahankan Atribut Default", new String[]{"&7&oUntuk item baru BIARKAN FALSE", "&7&oJika tidak Anda bisa biarkan true", "&7&oJika Anda ingin memperbarui item lama ubah ke FALSE", "&7&oTapi hati-hati tag item mungkin berubah", "&7&oini dapat mempengaruhi shopkeeper atau resep craft kustom", "&7&oHanya untuk 1.19+"}, null),
    incendiary("incendiary", "Membakar", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("CAMPFIRE", "FLINT_AND_STEEL"))),
    infiniteFuel("infiniteFuel", "Bahan Bakar Tak Terbatas", new String[]{"&7&oTungku akan memiliki Bahan Bakar tak terbatas"}, Material.FURNACE),
    infiniteVisualLit("infiniteVisualLit", "Visual Menyala Tak Terbatas", new String[]{"&7&oTungku akan selalu menyala tapi hanya visual"}, Material.FURNACE),
    instrument("instrument", "Instrumen", new String[]{"&7&oInstrumen"}, Material.NOTE_BLOCK),
    instrumentFeatures("instrumentFeatures", "Fitur Instrumen", new String[]{"&7&oFitur instrumen"}, Material.NOTE_BLOCK),
    interactionRange("interactionRange", "Jangkauan Interaksi", new String[]{"&7&oJangkauan interaksi"}, GUI.CLOCK),
    interactionUUID("interactionUUID", "UUID Interaksi", new String[]{"&7&oUUID dari interaksi"}, GUI.CLOCK),
    inventoryTitle("inventoryTitle", "Judul Inventaris", new String[]{"&7&oJudul dari inventaris"}, Material.NAME_TAG),
    invisible("invisible", "Tak Terlihat", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("GLASS_PANE", "GLASS"))),
    isAmbient("isAmbient", "Ambient", new String[]{"&7&oJika efek ramuan adalah ambient"}, null),
    isCollidable("isCollidable", "Dapat Bertubrukan", new String[]{"&c&oEKSPERIMENTAL"}, null),
    isCooldownInTicks("isCooldownInTicks", "Cooldown dalam ticks", new String[]{"&7&oApakah cooldown dalam ticks?"}, null),
    isDurabilityBasedOnUsage("isDurabilityBasedOnUsage", "Daya Tahan Berbasis Penggunaan", new String[]{"&7&oFitur daya tahan", "&7&oakan diabaikan, dan penggunaan", "&7&oakan digunakan sebagai daya tahan"}, null),
    isLocked("isLocked", "Terkunci", new String[]{"&7&oApakah wadah terkunci?"}, null),
    isMeat("isMeat", "Apakah Daging", new String[]{"&7Apakah makanan ini daging?"}, null),
    isRefreshableClean("isRefreshableClean", "Dapat Disegarkan Bersih", new String[]{"&7&oDapat disegarkan bersih"}, null),
    itemConditions("itemConditions", "Kondisi Item", new String[]{""}, Material.ANVIL),
    itemModel("itemModel", "Model Item", new String[]{"&7&oModel item", "&7&oFormat: namespace:id", "&7&oAkan mereferensi model /assets/<namespace>/models/item/<id>"}, FixedMaterial.getMaterial(Arrays.asList("BLUE_GLAZED_TERRACOTTA"))),
    itemRarity("itemRarity", "Kelangkaan Item", new String[]{"&7&oKelangkaan dari item"}, Material.EMERALD),
    items("items", "Item", new String[]{"&7&oItem"}, FixedMaterial.getMaterial(Arrays.asList("TORCH"))),
    itemsAdder("itemsAdder", "Items Adder", new String[]{"&7&oItem yang diperlukan untuk", "&7&omenjalankan perdagangan ini"}, Material.DIAMOND),
    itemsAdderID("itemsAdderID", "ItemsAdder", new String[]{"&7&oID ItemsAdderBlock"}, Material.DIAMOND_BLOCK),
    keepDefaultAttributes("keepDefaultAttributes", "Pertahankan Atribut Default", new String[]{"&7&oPertahankan atribut default", "&7&oHanya untuk 1.19+"}, null),
    keepItemOnDeath("keepItemOnDeath", "Pertahankan Item Saat Mati", new String[]{"&7&oPertahankan item saat mati?"}, Material.BONE),
    knockbackStrength("knockbackStrength", "Kekuatan Knockback", new String[]{}, Material.CHAINMAIL_CHESTPLATE),
    level("level", "Level", new String[]{"&7&oLevel dari enchantment"}, Material.BEACON),
    leverUUID("leverUUID", "UUID Tuas", new String[]{"&7&oUUID dari tuas"}, GUI.CLOCK),
    lifeTime("lifeTime", "Waktu Hidup", new String[]{"&7&oDurasi penerbangan roket kembang api ini", "&7&oyaitu jumlah bubuk mesiu yang digunakan untuk membuatnya,", "&7&oHarus integer antara -128 dan 127. Default 1"}, GUI.CLOCK),
    lockedInventory("locked-in-inventory", "Inventaris Terkunci", new String[]{"&7&oItem tidak dapat", "&7&odipindahkan dari inventaris"}, Material.BARRIER),
    lockedName("lockedName", "Nama Terkunci", new String[]{"&7&oNama dari item", "&7&oyang dapat membuka wadah"}, Material.NAME_TAG),
    loop("loop", "Fitur Pengulangan", new String[]{"&7&oPengaturan spesifik", "&7&ountuk pengaktif pengulangan"}, Material.ANVIL),
    lore("lore", "Lore", new String[]{"&7&oLore dari item"}, Material.PAPER),
    magicID("magicID", "ID Magic", new String[]{"&7&oID Magic"}, Material.STONE),
    material("material", "Material", new String[]{"&7&oMaterial"}, Material.STONE),
    materialAndTags("materialAndTags", "Material dan Tag", new String[]{"&7&oMaterial dan tag"}, Material.STONE),
    materials("blocks", "Material Blok", new String[]{"&7&oMaterial yang dipengaruhi oleh aturan ini"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    maxDurability("maxDurability", "Daya Tahan Maksimal", new String[]{"&7&oFitur daya tahan maksimal"}, Material.ANVIL),
    maxUsePerDay("maxUsePerDay", "Penggunaan Maksimal per Hari", new String[]{"&7&oPenggunaan maksimal per hari", "&a-1 &7&o= tak terbatas"}, Material.BUCKET),
    messageIfMaxReached("messageIfMaxReached", "Pesan jika Maksimal Tercapai", new String[]{"&7&oPesan jika maksimal tercapai"}, GUI.WRITABLE_BOOK),
    messageIfNotValid("messageIfNotValid", "Pesan jika Tidak Valid", new String[]{"&7&oPesan jika kondisi tidak valid?"}, GUI.WRITABLE_BOOK),
    messageIfNotValidForTarget("messageIfNotValidForTarget", "Pesan jika Tidak Valid Untuk Target", new String[]{"&7&oPesan yang ditampilkan jika", "&7&okondisi tidak valid untuk target"}, GUI.WRITABLE_BOOK),
    miningSpeed("miningSpeed", "Kecepatan Menambang", new String[]{"&7&oKecepatan menambang dari alat"}, GUI.CLOCK),
    modification_double("modification", "Pembaruan Angka", new String[]{"&7&oPembaruan angka"}, GUI.WRITABLE_BOOK),
    modification_string("modification", "Pembaruan String", new String[]{"&7&oPembaruan string"}, GUI.WRITABLE_BOOK),
    multiChoices("multi-choices", "Multi Pilihan", new String[]{}, Material.DIAMOND),
    mustBeAProjectileLaunchWithTheSameEI("mustBeAProjectileLaunchWithTheSameEI", "Harus Proyektil yang Diluncurkan dengan EI yang Sama", new String[]{"&7&oHarus proyektil", "&7&oyang diluncurkan dengan EI yang sama"}, Material.ARROW),
    mustBeItsOwnInventory("mustBeItsOwnInventory", "Harus Inventaris Miliknya", new String[]{"&7&oPemain harus membuka di inventarisnya sendiri"}, Material.LEVER),
    myFurnitureFeatures("myFurnitureFeatures", "Fitur MyFurniture", new String[]{"&7&oFitur MyFurniture"}, FixedMaterial.getMaterial(Arrays.asList("BOOKSHELF"))),
    myfurnitureID("myfurnitureID", "ID MyFurniture", new String[]{"&7&oID MyFurniture"}, FixedMaterial.getMaterial(Arrays.asList("BOOKSHELF"))),
    name("name", "Nama", new String[]{"&7&oNama atau nama tampilan"}, Material.NAME_TAG),
    nbt("nbt", "Tag NBT", new String[]{"&7&oFitur tag NBT", "&7&oMemerlukan plugin &eNBTAPI"}, Material.NAME_TAG),
    noActivatorRunIfTheEventIsCancelled("noActivatorRunIfTheEventIsCancelled", "Tidak Ada Pengaktif Jika Event Dibatalkan", new String[]{"&7&oJika plugin lain membatalkan event yang", "&7&omemicu pengaktif dan Anda mengaktifkan fitur ini", "&7&opengaktif tidak akan diaktifkan"}, null),
    northValue("northValue", "Nilai Utara", new String[]{"&7&oNilai utara"}, GUI.CLOCK),
    notExecutableItem("notExecutableItem", "Bukan Item yang Dapat Dieksekusi", new String[]{"&7&oApakah item ini bukan executable item?"}, null),
    nutrition("nutrition", "Nutrisi", new String[]{"&7Nutrisi dari makanan"}, GUI.CLOCK),
    object("object", "Objek", new String[]{"&7&oSebuah Objek"}, Material.PAPER),
    occupiedSlots("occupiedSlots", "Slot yang Ditempati", new String[]{"&7&oSlot yang ditempati"}, FixedMaterial.getMaterial(Arrays.asList("CHISELED_BOOKSHELF", "BARRIER"))),
    onlyBreakableWithEI("onlyBreakableWithEI", "Hanya Dapat Dihancurkan dengan EI", new String[]{"&7&oDaftar executable item", "&7&oyang dapat menghancurkan blok"}, Material.DIAMOND_PICKAXE),
    onlyOwnerBlackListedActivators("onlyOwnerBlackListedActivators", "Pengaktif yang Dilarang", new String[]{"&7&oPengaktif yang Dilarang", "&7&o(dapat digunakan oleh semua orang bahkan jika", "&7&ofitur hanya pemilik diatur ke true)"}, Material.BARRIER),
    operation("operation", "Operasi", new String[]{"&7&oOperasi"}, Material.DISPENSER),
    option("option", "Opsi", new String[]{"&7&oOpsi"}, Material.COMPASS),
    oraxenID("oraxenID", "ID Oraxen", new String[]{"&7&oID Oraxen"}, Material.DIAMOND_BLOCK),
    otherEICooldowns("otherEICooldowns", "Cooldown EI Lain", new String[]{"&7&oUntuk menambahkan cooldown", "&7&oke EI lain"}, Material.ANVIL),
    ownerCommands("ownerCommands", "Perintah Pemilik", new String[]{"&7&oPerintah pemilik untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    ownerConditions("ownerConditions", "Kondisi Pemilik", new String[]{""}, Material.ANVIL),
    pages("pages", "Halaman", new String[]{"&7&oHalaman"}, GUI.WRITABLE_BOOK),
    part1("part1", "Bagian 1", new String[]{"&7&oBagian pertama dari kondisi"}, GUI.WRITABLE_BOOK),
    part2("part2", "Bagian 2", new String[]{"&7&oBagian kedua dari kondisi"}, GUI.WRITABLE_BOOK),
    particle("particle", "Partikel", new String[]{"&7&oPartikel kustom"}, Material.BLAZE_POWDER),
    particles("particles", "Partikel", new String[]{"&7&oPartikel"}, Material.BLAZE_POWDER),
    particlesAmount("particlesAmount", "Jumlah Partikel", new String[]{"&7&oJumlah partikel"}, GUI.COMPARATOR),
    particlesDelay("particlesDelay", "Penundaan Partikel", new String[]{"&7&oPenundaan partikel"}, GUI.COMPARATOR),
    particlesDensity("particlesDensity", "Kepadatan Partikel", new String[]{"&7&oKepadatan partikel"}, GUI.COMPARATOR),
    particlesOffSet("particlesOffSet", "Offset Partikel", new String[]{"&7&oOffset partikel"}, GUI.COMPARATOR),
    particlesSpeed("particlesSpeed", "Kecepatan Partikel", new String[]{"&7&oKecepatan partikel"}, GUI.COMPARATOR),
    particlesType("particlesType", "Tipe Partikel", new String[]{"&7&oTipe partikel"}, Material.BLAZE_POWDER),
    pattern("pattern", "Pola", new String[]{"&7&oPola yang digunakan untuk trim armor"}, FixedMaterial.getMaterial(Arrays.asList("EYE_ARMOR_TRIM_SMITHING_TEMPLATE"))),
    patterns("patterns", "Pola", new String[]{"&7&oPola-pola"}, Material.ANVIL),
    pausePlaceholdersConditions("pausePlaceholdersConditions", "Kondisi Jeda Placeholder", new String[]{"&7&oKondisi placeholder untuk menjeda cooldown"}, Material.ANVIL),
    pauseWhenOffline("pauseWhenOffline", "Jeda Saat Offline", new String[]{"&7&oJeda cooldown saat pemain offline?"}, null),
    period("period", "Periode", new String[]{}, GUI.CLOCK),
    periodInTicks("periodInTicks", "Periode dalam ticks", new String[]{}, GUI.CLOCK),
    pickupStatus("pickupStatus", "Status Pengambilan", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("LEAD", "LEASH"))),
    pierceLevel("pierceLevel", "Level Tembus", new String[]{}, FixedMaterial.getMaterial(Collections.singletonList("TIPPED_ARROW"))),
    placeholderCondition("placeholderCondition", "Kondisi Placeholder", new String[]{"&7&oKondisi Placeholder dengan opsinya"}, GUI.WRITABLE_BOOK),
    placeholderConditionCmds("placeholderConditionCmds", "Perintah Konsol Jika Tidak Valid", new String[]{"&7&oPerintah Konsol Jika Error"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "WRITABLE_BOOK", "BOOK_AND_QUILL"))),
    placeholdersConditions("placeholdersConditions", "Kondisi Placeholder", new String[]{"&7&oKondisi placeholder"}, Material.ANVIL),
    playerCanSit("playerCanSit", "Pemain Dapat Duduk", new String[]{"&7&oPemain dapat duduk"}, FixedMaterial.getMaterial(Arrays.asList("STONE_STAIRS"))),
    playerCommands("playerCommands", "Perintah Pemain", new String[]{"&7&oPerintah pemain untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    playerConditions("playerConditions", "Kondisi Pemain", new String[]{""}, Material.ANVIL),
    playerCooldownFeatures("playerCooldownFeatures", "Opsi Cooldown Pemain", new String[]{"&7&oCooldown pemain"}, GUI.CLOCK),
    potionColor("potionColor", "Warna Ramuan", new String[]{"&7&oWarna dari ramuan"}, Material.REDSTONE),
    potionEffect("potionEffect", "Efek Ramuan", new String[]{"&7&oEfek ramuan dengan opsinya"}, FixedMaterial.getBrewingStand()),
    potionEffectType("potionEffectType", "Tipe Efek Ramuan", new String[]{"&7&oTipe dari efek ramuan"}, Material.COMPASS),
    potionEffects("potionEffects", "Efek Ramuan", new String[]{"&7&oEfek-efek ramuan"}, FixedMaterial.getBrewingStand()),
    potionExtended("potionExtended", "Ramuan Diperpanjang", new String[]{"&7&oRamuan diperpanjang"}, null),
    potionSettings("potionSettings", "Pengaturan Ramuan", new String[]{"&7&oPengaturan ramuan"}, FixedMaterial.getBrewingStand()),
    potionType("potionType", "Tipe Ramuan", new String[]{"&7&oTipe ramuan"}, Material.POTION),
    potionUpgraded("potionUpgraded", "Ramuan Ditingkatkan", new String[]{"&7&oRamuan ditingkatkan"}, null),
    radius("radius", "Radius", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("HEART_OF_THE_SEA", "WEB"))),
    rarity("rarity", "Kelangkaan", new String[]{"&7&oKelangkaan dari item"}, Material.EMERALD),
    recognitions("recognitions", "Pengenalan", new String[]{"&7&oPengenalan dari item"}, Material.PAPER),
    redstoneColor("redstoneColor", "Warna Redstone", new String[]{"&7&oWarna redstone"}, Material.REDSTONE),
    refreshTag("refreshTagDoNotEdit", "Segarkan Tag", new String[]{"&7&oSegarkan tag"}, null),
    removeWhenHitBlock("removeWhenHitBlock", "Hapus saat Menabrak Blok", new String[]{"&7&oHapus saat menabrak blok"}, null),
    repairCost("repairCost", "Biaya Perbaikan", new String[]{"&7&oBiaya perbaikan"}, GUI.CLOCK),
    repairableFeatures("repairableFeatures", "Fitur yang Dapat Diperbaiki", new String[]{"&7&oFitur yang dapat diperbaiki"}, Material.ANVIL),
    requiredExecutableItem("requiredExecutableItem", "ExecutableItem yang Diperlukan", new String[]{"&7&oExecutableItem yang diperlukan"}, Material.PAPER),
    requiredExecutableItems("requiredExecutableItems", "ExecutableItems yang Diperlukan", new String[]{"&7&oExecutableItems yang diperlukan"}, Material.DIAMOND_PICKAXE),
    requiredExperience("requiredExperience", "Pengalaman yang Diperlukan", new String[]{"&7&oPengalaman yang diperlukan"}, FixedMaterial.getMaterial(Arrays.asList("EXPERIENCE_BOTTLE", "EXP_BOTTLE"))),
    requiredGroups("requiredGroups", "Hal yang Diperlukan", new String[]{"&7&oHal yang diperlukan"}, Material.ANVIL),
    requiredItem("requiredItem", "Item yang Diperlukan", new String[]{"&7&oItem yang diperlukan"}, Material.PAPER),
    requiredItems("requiredItems", "Item yang Diperlukan", new String[]{"&7&oItem yang diperlukan"}, Material.DIAMOND),
    requiredLevel("requiredLevel", "Level yang Diperlukan", new String[]{"&7&oLevel yang diperlukan"}, FixedMaterial.getMaterial(Arrays.asList("EXPERIENCE_BOTTLE", "EXP_BOTTLE"))),
    requiredMagic("requiredMagic", "Magic yang Diperlukan", new String[]{"&7&oMagic yang diperlukan", "&7&o(dari EcoSkills)"}, GUI.WRITABLE_BOOK),
    requiredMagics("requiredMagics", "Magic yang Diperlukan", new String[]{"&7&oMagic yang diperlukan", "&7&o(dari EcoSkills)"}, GUI.WRITABLE_BOOK),
    requiredMana("requiredMana", "Mana yang Diperlukan", new String[]{"&7&oMana yang diperlukan", "&4&lMembutuhkan: &6AureliumSkills/MMOCore"}, Material.WATER_BUCKET),
    requiredMoney("requiredMoney", "Uang yang Diperlukan", new String[]{"&7&oUang yang diperlukan", "&4&lMembutuhkan: &6Vault"}, Material.GOLD_BLOCK),
    requiredObject("requiredObject", "Objek yang Diperlukan", new String[]{}, Material.COMPASS),
    resetInternalDatasWhenBroken("resetInternalDatasWhenBroken", "Reset Data Internal saat Rusak", new String[]{"&7&oJika blok rusak,", "&7&oakan mereset data internal", "&7&o(Penggunaan dan variabel)"}, Material.LEVER),
    restrictions("restrictions", "Pembatasan", new String[]{"&7&oFitur pembatasan"}, Material.ANVIL),
    rotation("rotation", "Rotasi", new String[]{"&7&oRotasi dari tuas"}, GUI.CLOCK),
    saturation("saturation", "Kejenuhan", new String[]{"&7Kejenuhan dari makanan"}, GUI.CLOCK),
    scale("scale", "Skala", new String[]{""}, Material.HOPPER),
    scheduleFeatures("scheduleFeatures", "Fitur Penjadwalan", new String[]{"&7&oFitur Penjadwalan"}, GUI.CLOCK),
    silenceOutput("silenceOutput", "Diamkan Output", new String[]{"&7&oDiamkan output dari perintah", "&7&o(Hanya di konsol)"}, null),
    silent("silent", "Diam", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("BELL", "JUKEBOW"))),
    sitFeatures("sitFeatures", "Fitur Duduk", new String[]{"&7&oFitur Duduk"}, FixedMaterial.getMaterial(Arrays.asList("STONE_STAIRS"))),
    skyLight("skyLight", "Cahaya Langit", new String[]{""}, FixedMaterial.getMaterial(Arrays.asList("LIGHT"))),
    slot("slot", "Slot", new String[]{"&7&oSlot"}, Material.ARMOR_STAND),
    sound("sound", "Suara", new String[]{"&7&oSuara"}, Material.NOTE_BLOCK),
    southValue("southValue", "Nilai Selatan", new String[]{"&7&oNilai selatan"}, GUI.CLOCK),
    spawnerType("spawnerType", "Tipe Spawner", new String[]{"&7&oTipe dari spawner"}, FixedMaterial.getMaterial(Arrays.asList("SPAWNER"))),
    startDate("startDate", "Tanggal Mulai", new String[]{"&7&oTanggal mulai"}, GUI.CLOCK),
    stopCheckingOtherConditionsIfNotValid("stopCheckingOtherConditionsIfNotValid", "Hentikan Pengecekan Kondisi Lain jika Tidak Valid", new String[]{"&7&oHentikan pengecekan kondisi lain", "&7&ojika kondisi tidak valid"}, GUI.WRITABLE_BOOK),
    storageFeatures("storageFeatures", "Fitur Penyimpanan", new String[]{"&7&oFitur Penyimpanan"}, FixedMaterial.getMaterial(Arrays.asList("CHEST"))),
    storeItemInfo("storeItemInfo", "Simpan Info Item", new String[]{"&7&oSimpan info item?", "&7&oSimpan info item seperti pemilik"}, null),
    string("string", "String", new String[]{"&7&oSebuah string"}, Material.PAPER),
    subPattern("subPattern", "Sub Pola", new String[]{"&7&oSub pola dengan opsinya"}, Material.ANVIL),
    subPatterns("subPatterns", "Sub Pola", new String[]{"&7&oSub-sub pola"}, Material.ANVIL),
    swappable("swappable", "Dapat Ditukar", new String[]{"&7&oItem dapat ditukar"}, null),
    tags("tags", "Tag", new String[]{"&7&oTag", "&8&oContoh", "&a{age:3}", "&a{lit:true}", "&7&ominecraft.fandom.com/wiki/Block_states"}, GUI.WRITABLE_BOOK),
    targetBlockCommands("targetBlockCommands", "Perintah Blok Target", new String[]{"&7&oPerintah blok target untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    targetBlockConditions("targetBlockConditions", "Kondisi Blok Target", new String[]{""}, Material.ANVIL),
    targetCommands("targetCommands", "Perintah Target", new String[]{"&7&oPerintah target untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    targetConditions("targetConditions", "Kondisi Target", new String[]{""}, Material.ANVIL),
    targetEntityCommands("targetEntityCommands", "Perintah Entitas Target", new String[]{"&7&oPerintah entitas target untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    targetEntityConditions("targetEntityConditions", "Kondisi Entitas Target", new String[]{""}, Material.ANVIL),
    targetPlayerCommands("targetPlayerCommands", "Perintah Pemain Target", new String[]{"&7&oPerintah pemain target untuk dieksekusi"}, FixedMaterial.getMaterial(Arrays.asList("COMMAND_BLOCK", "COMMAND"))),
    targetPlayerConditions("targetPlayerConditions", "Kondisi Pemain Target", new String[]{""}, Material.ANVIL),
    title("title", "Judul", new String[]{"&7&oJudul"}, Material.NAME_TAG),
    titleAdjustment("titleAdjustment", "Penyesuaian Judul", new String[]{"&7&oPenyesuaian judul"}, FixedMaterial.getMaterial(Collections.singletonList("PISTON"))),
    titleFeatures("titleFeatures", "Opsi Judul", new String[]{"&7&oFitur judul"}, Material.ANVIL),
    to("to", "Ke", new String[]{""}, GUI.CLOCK),
    toolRule("toolRule", "Aturan Alat", new String[]{"&7&oAturan alat"}, Material.DIAMOND_PICKAXE),
    toolRules("toolRules", "Aturan Alat", new String[]{"&7&oAturan-aturan alat"}, Material.DIAMOND_PICKAXE),
    tooltipModel("tooltipModel", "Model Tooltip", new String[]{"&7&oModel tooltip", "&7&oFormat: namespace:id", "&7&oAkan mereferensi model /assets/<namespace>/textures/gui/sprites/tooltip/<id>_background", "&7&oAkan mereferensi model /assets/<namespace>/textures/gui/sprites/tooltip/<id>_frame"}, FixedMaterial.getMaterial(Arrays.asList("BLUE_GLAZED_TERRACOTTA"))),
    trimMaterial("trimMaterial", "Material Trim", new String[]{"&7&oMaterial yang digunakan untuk trim armor"}, Material.DIAMOND),
    type("type", "Tipe", new String[]{"&7&oTipe"}, GUI.COMPARATOR),
    typeTarget("typeTarget", "Tipe Target", new String[]{"&7&oTipe target"}, Material.COMPASS),
    unbreakable("unbreakable", "Tidak Dapat Hancur", new String[]{"&7&oItem tidak dapat hancur?"}, Material.BEDROCK),
    underValue("underValue", "Nilai Bawah", new String[]{"&7&oNilai bawah"}, GUI.CLOCK),
    updateArmorSettings("updateArmorSettings", "Perbarui Pengaturan Armor", new String[]{"&7&oPerbarui pengaturan armor dari item"}, null),
    updateAttributes("updateAttributes", "Perbarui Atribut", new String[]{"&7&oPerbarui atribut dari item"}, null),
    updateCustomModelData("updateCustomModelData", "Perbarui Data Model Kustom", new String[]{"&7&oPerbarui data model kustom dari item"}, null),
    updateDurability("updateDurability", "Perbarui Daya Tahan", new String[]{"&7&oPerbarui daya tahan dari item"}, null),
    updateEnchants("updateEnchants", "Perbarui Enchant", new String[]{"&7&oPerbarui enchant dari item"}, null),
    updateHiders("updateHiders", "Perbarui Penyembunyi", new String[]{"&7&oPerbarui flag penyembunyi dari item"}, null),
    updateLore("updateLore", "Perbarui Lore", new String[]{"&7&oPerbarui lore dari item"}, null),
    updateMaterial("updateMaterial", "Perbarui Material", new String[]{"&7&oPerbarui material dari item"}, null),
    updateName("updateName", "Perbarui Nama", new String[]{"&7&oPerbarui nama dari item"}, null),
    usage("usage", "Penggunaan", new String[]{"&7&oPenggunaan dari item", "&a-1 &7&o= Tak terbatas", "&aTingkatkan &7&oatau &cKurangi &7&openggunaan ini dengan", "&eUsageModification &7&odi pengaktif Anda"}, Material.BUCKET),
    usageConditions("usageConditions", "Kondisi Penggunaan", new String[]{"&7&oKondisi penggunaan"}, GUI.CLOCK),
    usageFeatures("usageFeatures", "Fitur Penggunaan", new String[]{"&7&oFitur penggunaan", "&aTingkatkan &7&oatau &cKurangi &7&openggunaan ini dengan", "&eUsageModification &7&odi pengaktif Anda"}, Material.BUCKET),
    usageLimit("usageLimit", "Batas Penggunaan", new String[]{"&7&oBatas penggunaan dari item", "&7&oPenggunaan tidak bisa ditingkatkan melebihi nilai ini"}, Material.BUCKET),
    usageModification("usageModification", "Modifikasi Penggunaan", new String[]{"&7&oModifikasi penggunaan"}, Material.BUCKET),
    useCooldownFeatures("useCooldownFeatures", "Gunakan Fitur Cooldown", new String[]{"&7&oFitur cooldown penggunaan"}, GUI.CLOCK),
    usePerDay("usePerDay", "Penggunaan per Hari", new String[]{"&7&oFitur penggunaan per hari"}, Material.BUCKET),
    uuid("uuid", "UUID", new String[]{"&7&oUUID"}, Material.NAME_TAG),
    vanillaUseCooldown("vanillaUseCooldown", "Cooldown Penggunaan Vanilla", new String[]{"&7&oCooldown penggunaan vanilla"}, GUI.CLOCK),
    variable("variable", "Variabel", new String[]{"&7&oSebuah variabel dengan opsinya"}, GUI.WRITABLE_BOOK),
    variableName("variableName", "Nama Variabel", new String[]{"&7&oNama variabel", "&7&oyang ingin Anda buat/ubah"}, GUI.WRITABLE_BOOK),
    variableUpdate("variableUpdate", "Pembaruan Variabel", new String[]{"&7&oPembaruan variabel dengan opsinya"}, GUI.WRITABLE_BOOK),
    variables("variables", "Variabel", new String[]{"&7&oVariabel", "&7&oVariabel digunakan untuk menyimpan data seperti kills / deaths ..."}, GUI.WRITABLE_BOOK),
    variablesModification("variablesModification", "Modifikasi Variabel", new String[]{"&7&oBagian untuk memodifikasi variabel Anda"}, GUI.WRITABLE_BOOK),
    velocity("velocity", "Kecepatan", new String[]{}, FixedMaterial.getMaterial(Arrays.asList("FIREWORK_ROCKET", "ELYTRA"))),
    viewRange("viewRange", "Jangkauan Pandang", new String[]{"&7&oJangkauan pandang"}, GUI.CLOCK),
    visualFire("visualFire", "Api Visual", new String[]{}, Material.FLINT_AND_STEEL),
    visualItem("visualItem", "Item Visual", new String[]{""}, Material.ITEM_FRAME),
    westValue("westValue", "Nilai Barat", new String[]{"&7&oNilai barat"}, GUI.CLOCK),
    when("when", "Kapan", new String[]{"&7&oKapan fitur diaktifkan"}, GUI.CLOCK),
    whitelistMaterials("whitelistMaterials", "Daftar Putih Material", new String[]{"&7&oDaftar putih material", "&7&oTaruh material", "&7&oyang dapat dimasukkan ke dalam wadah"}, Material.CHEST),
    whitelistedWorlds("whitelistedWorlds", "Dunia yang Diizinkan", new String[]{"&7&oFitur dunia yang diizinkan"}, FixedMaterial.getMaterial(Arrays.asList("GRASS_BLOCK", "GRASS"))),
    width("width", "Lebar", new String[]{"&7&oTekan F3 + b untuk melihat zona"}, GUI.CLOCK),
    worldConditions("worldConditions", "Kondisi Dunia", new String[]{""}, Material.ANVIL),
    ;


    private String configName;
    private String editorName;
    private String[] editorDescription;
    private Material editorMaterial;
    private boolean requirePremium;
    private SavingVerbosityLevel savingVerbosityLevel;

    FeatureSettingsSCoreID(String name, String editorName, String[] editorDescription, Material editorMaterial) {
        this.configName = "";
        this.editorName = editorName;
        this.editorDescription = editorDescription;
        this.editorMaterial = editorMaterial;
        this.requirePremium = false;
        this.savingVerbosityLevel = SavingVerbosityLevel.SAVE_ALWAYS;
    }

    @Override
    public String getIdentifier() {
        return this.name();
    }

    @Override
    public String getName() {
        return configName;
    }

    @Override
    public void setName(String name) {
        this.configName = name;
    }

    @Override
    public String getEditorName() {
        return editorName;
    }

    @Override
    public String[] getEditorDescription() {
        return editorDescription;
    }

    @Override
    public String[] getEditorDescriptionBrut() {
        return editorDescription;
    }

    @Override
    public Material getEditorMaterial() {
        return editorMaterial;
    }

    @Override
    public boolean isRequirePremium() {
        return requirePremium;
    }

    @Override
    public void setRequirePremium(boolean requirePremium) {
        this.requirePremium = requirePremium;
    }

    @Override
    public SavingVerbosityLevel getSavingVerbosityLevel() {
        return savingVerbosityLevel;
    }

    @Override
    public void setSavingVerbosityLevel(SavingVerbosityLevel savingVerbosityLevel) {
        this.savingVerbosityLevel = savingVerbosityLevel;
    }
}
